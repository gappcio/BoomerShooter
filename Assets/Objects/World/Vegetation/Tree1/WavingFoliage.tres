[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://bjbyeqhv5nhk1"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_aedne"]
parameter_name = "ColorParameter"
qualifier = 2
default_value_enabled = true
default_value = Color(0.0757859, 0.588597, 0.237235, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_qn6vm"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_pa8e1"]
constant = 0.1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_1ggy0"]
constant = 0.1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_l4t03"]
size = Vector2(600, 280)
expression = "float fade_distance = length(VERTEX);

float fade = clamp(smoothstep(0.8, 1.0, fade_distance), 0.0, 1.0);

alpha_out = fade;"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cjip0"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ql8yx"]

[sub_resource type="Gradient" id="Gradient_qms6n"]
colors = PackedColorArray(0, 0, 0, 1, 0.0999859, 0.099986, 0.0999859, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_6niix"]
noise_type = 3
frequency = 0.0506
fractal_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_cogj3"]
color_ramp = SubResource("Gradient_qms6n")
noise = SubResource("FastNoiseLite_6niix")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_aedne"]
source = 5
texture = SubResource("NoiseTexture2D_cogj3")

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_qn6vm"]
parameter_name = "noise_texture"
color_default = 1
texture_repeat = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_toon, specular_toon;

uniform sampler2D noise_texture : hint_default_black, repeat_enable;
instance uniform vec4 ColorParameter : source_color = vec4(0.075786, 0.588597, 0.237235, 1.000000);



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


	vec4 n_out5p0;
// Texture2D:5
	n_out5p0 = texture(noise_texture, UV);


// VectorOp:4
	vec3 n_out4p0 = n_out3p0 + vec3(n_out5p0.xyz);


// Output:0
	VERTEX = n_out4p0;


}

void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


	float n_out6p0;
// Expression:6
	n_out6p0 = 0.0;
	{
		float fade_distance = length(VERTEX);
		
		float fade = clamp(smoothstep(0.8, 1.0, fade_distance), 0.0, 1.0);
		
		n_out6p0 = fade;
	}


// FloatConstant:3
	float n_out3p0 = 0.000000;


// FloatConstant:5
	float n_out5p0 = 0.100000;


// FloatConstant:4
	float n_out4p0 = 0.100000;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out6p0;
	ROUGHNESS = n_out3p0;
	ALPHA_SCISSOR_THRESHOLD = n_out5p0;
	ALPHA_HASH_SCALE = n_out4p0;


}
"
graph_offset = Vector2(-622.217, 8.81216)
modes/diffuse = 3
modes/specular = 1
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_cjip0")
nodes/vertex/3/position = Vector2(-240, 40)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorOp_ql8yx")
nodes/vertex/4/position = Vector2(140, 80)
nodes/vertex/5/node = SubResource("VisualShaderNodeTexture_aedne")
nodes/vertex/5/position = Vector2(-540, 300)
nodes/vertex/6/node = SubResource("VisualShaderNodeTexture2DParameter_qn6vm")
nodes/vertex/6/position = Vector2(-1060, 300)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 6, 0, 5, 2, 5, 0, 4, 1, 4, 0, 0, 0)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_aedne")
nodes/fragment/2/position = Vector2(-220, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_qn6vm")
nodes/fragment/3/position = Vector2(180, 500)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_pa8e1")
nodes/fragment/4/position = Vector2(120, 920)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_1ggy0")
nodes/fragment/5/position = Vector2(120, 820)
nodes/fragment/6/node = SubResource("VisualShaderNodeExpression_l4t03")
nodes/fragment/6/position = Vector2(-640, 400)
nodes/fragment/6/size = Vector2(600, 280)
nodes/fragment/6/input_ports = ""
nodes/fragment/6/output_ports = "0,0,alpha_out;"
nodes/fragment/6/expression = "float fade_distance = length(VERTEX);

float fade = clamp(smoothstep(0.8, 1.0, fade_distance), 0.0, 1.0);

alpha_out = fade;"
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 3, 5, 0, 0, 19, 4, 0, 0, 20, 2, 0, 0, 0, 6, 0, 0, 1)
